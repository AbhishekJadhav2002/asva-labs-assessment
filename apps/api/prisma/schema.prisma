generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  tenantId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects Project[]
  tasks    Task[]

  @@index([tenantId])
  @@index([email, tenantId])
  @@map("users")
}

model Project {
  id          String        @id @default(cuid())
  name        String
  description String?
  status      ProjectStatus @default(ACTIVE)
  tenantId    String
  userId      String        // owner
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks Task[]

  @@index([tenantId])
  @@index([userId, tenantId])
  @@index([status, tenantId])
  @@map("projects")
}

model Task {
  id          String     @id @default(cuid())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  priority    Priority   @default(MEDIUM)
  projectId   String
  userId      String     // assignee
  tenantId    String
  dueDate     DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([tenantId])
  @@index([projectId, tenantId])
  @@index([userId, tenantId])
  @@index([status, tenantId])
  @@index([priority, tenantId])
  @@map("tasks")
}

enum Role {
  ADMIN
  USER
}

enum ProjectStatus {
  ACTIVE
  COMPLETED
  ARCHIVED
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
  CANCELLED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}